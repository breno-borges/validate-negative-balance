/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms;

import java.io.IOException;
import java.util.List;
import validatenegativebalance.ProcessSpreadsheet;
import validatenegativebalance.Validation;

/**
 *
 * @author breno.santos.o2b_dot
 */
public class Result extends javax.swing.JDialog {

    /**
     * Creates new form Result
     */
    public Result(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private String filePath;
    private ProcessSpreadsheet processSpreadsheet = new ProcessSpreadsheet();

    /**
     * Creates new form Result
     *
     * @param parent
     * @param modal
     * @param filePath
     * @throws java.io.IOException
     */
    public Result(java.awt.Frame parent, boolean modal, String filePath) throws IOException {
        super(parent, modal);
        initComponents();
        this.filePath = filePath;
        validation();
    }

    private void validation() throws IOException {
        List<Double> listAcumulate = processSpreadsheet.getColumnAcumulo(filePath);

        if (listAcumulate.getFirst() == 0) {
            textAction.setText("Nenhuma ação necessária");
            textReason.setText("Saldo já está zerado");
            textTransaction.setText("Saldo já está zerado");
            textNewBalance.setText(listAcumulate.getFirst().toString());
            textCurrentylBalance.setText(listAcumulate.getFirst().toString());
        } else if (listAcumulate.getFirst() > 0) {
            textAction.setText("Nenhuma ação necessária");
            textReason.setText("Saldo positivo");
            textTransaction.setText("Saldo positivo");
            textNewBalance.setText(listAcumulate.getFirst().toString());
            textCurrentylBalance.setText(listAcumulate.getFirst().toString());
        } else {
            Validation validation = processSpreadsheet.validateNegativeColumnAcumulo(filePath);
            if(validation.getOperation().equalsIgnoreCase("Expiração")){
                textAction.setText("Pedir ao time de banco de dados para reverter a transação");
            }
            else{
                textAction.setText("Bonificar via arquivo 500 com a pontuação informada abaixo");
            }
            textReason.setText(validation.getOperation());
            textTransaction.setText(validation.getTransaction());
            textCurrentylBalance.setText(listAcumulate.getFirst().toString());
            Double newBalance = (validation.getPoint() * -1.0) + listAcumulate.getFirst();
            textNewBalance.setText(newBalance.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lableTitle = new javax.swing.JLabel();
        labelReason = new javax.swing.JLabel();
        labelTransactions = new javax.swing.JLabel();
        labelAction = new javax.swing.JLabel();
        textReason = new javax.swing.JTextField();
        textTransaction = new javax.swing.JTextField();
        textAction = new javax.swing.JTextField();
        labelCurrentlyBalance = new javax.swing.JLabel();
        textCurrentylBalance = new javax.swing.JTextField();
        labelNewBalance = new javax.swing.JLabel();
        textNewBalance = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Resultado");
        setResizable(false);

        lableTitle.setText("Validação");

        labelReason.setText("Motivo:");

        labelTransactions.setText("Transações");

        labelAction.setText("Ação:");

        textReason.setEditable(false);

        textTransaction.setEditable(false);

        textAction.setEditable(false);

        labelCurrentlyBalance.setText("Saldo Atual:");

        textCurrentylBalance.setEditable(false);

        labelNewBalance.setText("Saldo após ação:");

        textNewBalance.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelReason, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelAction, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelTransactions, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNewBalance)
                            .addComponent(labelCurrentlyBalance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textReason)
                    .addComponent(textAction)
                    .addComponent(textTransaction)
                    .addComponent(textCurrentylBalance)
                    .addComponent(textNewBalance))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 234, Short.MAX_VALUE)
                .addComponent(lableTitle)
                .addGap(227, 227, 227))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lableTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelReason)
                    .addComponent(textReason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAction))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTransactions))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCurrentlyBalance)
                    .addComponent(textCurrentylBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNewBalance)
                    .addComponent(textNewBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Result dialog = new Result(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelAction;
    private javax.swing.JLabel labelCurrentlyBalance;
    private javax.swing.JLabel labelNewBalance;
    private javax.swing.JLabel labelReason;
    private javax.swing.JLabel labelTransactions;
    private javax.swing.JLabel lableTitle;
    private javax.swing.JTextField textAction;
    private javax.swing.JTextField textCurrentylBalance;
    private javax.swing.JTextField textNewBalance;
    private javax.swing.JTextField textReason;
    private javax.swing.JTextField textTransaction;
    // End of variables declaration//GEN-END:variables
}
